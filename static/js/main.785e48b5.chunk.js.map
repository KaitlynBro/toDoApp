{"version":3,"sources":["Components/Header.js","Components/Grateful.js","Components/Priorities.js","Components/Health.js","App.js","serviceWorker.js","index.js","assets/flower.png"],"names":["Calendar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","d","Date","weekday","Array","n","getDay","state","today","setState","day","react_default","a","createElement","className","React","Component","Grateful","props","value","handleChange","bind","assertThisInitialized","handleSubmit","event","target","preventDefault","onSubmit","type","onChange","Priorities","src","Flower","alt","id","for","Health","width","viewbox","fill","stroke","stroke-width","rows","cols","App","Header","Components_Grateful","Components_Priorities","Components_Health","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.785e48b5.chunk.js","sourcesContent":["import React from 'react';\n\nclass Calendar extends React.Component {\n    constructor() {\n      super();\n      const d = new Date();\n      const weekday = new Array(7);\n      weekday[0] = \"Sunday\";\n      weekday[1] = \"Monday\";\n      weekday[2] = \"Tuesday\";\n      weekday[3] = \"Wednesday\";\n      weekday[4] = \"Thursday\";\n      weekday[5] = \"Friday\";\n      weekday[6] = \"Saturday\";\n      const n = weekday[d.getDay()];\n      this.state = {\n          today: n\n      }\n  }\n  componentDidMount() {\n    this.setState({day: this.state.today + ''})\n  }\n  render() {\n    return (\n        <div className=\"calendar\">\n            <h1>{this.state.day}</h1>\n        </div>\n    )\n  }\n}\nexport default Calendar;","import React from 'react';\n\nclass Grateful extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) {\n    this.setState({value: event.target.value});\n    }\n    handleSubmit(event) {\n    event.preventDefault();\n    }\n    render() {\n        return (\n            <div className=\"grateful-wrapper\">\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        <h2>Today I'm Grateful for</h2>\n                        <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                    </label>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Grateful","import React from 'react';\nimport Flower from '.././assets/flower.png';\n\nclass Priorities extends React.Component {\n    render() {\n        return (\n            <div className=\"lists-wrapper\">\n                <div className=\"left\">\n                    <img src={Flower} alt=\"\" />\n                </div>\n                <div className=\"right\">\n                    <div>\n                        <h2>Priorities</h2>\n                        <div className=\"list-item\">\n                            <input type=\"text\" />\n                            <div className=\"checkbox\">\n                                <input type=\"checkbox\" id=\"checkbox_1\" />\n                                <label for=\"checkbox_1\"></label>\n                            </div>\n                        </div>\n                        <div className=\"list-item\">\n                            <input type=\"text\" />\n                            <div className=\"checkbox\">\n                                <input type=\"checkbox\" id=\"checkbox_2\" />\n                                <label for=\"checkbox_2\"></label>\n                            </div>\n                        </div>\n                        <div className=\"list-item\">\n                            <input type=\"text\" />\n                            <div className=\"checkbox\">\n                                <input type=\"checkbox\" id=\"checkbox_3\" />\n                                <label for=\"checkbox_3\"></label>\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <h2>To Do</h2>\n                        <div className=\"list-item\">\n                            <input type=\"text\" />\n                            <div className=\"checkbox\">\n                                <input type=\"checkbox\" id=\"checkbox_4\" />\n                                <label for=\"checkbox_4\"></label>\n                            </div>\n                        </div>\n                        <div className=\"list-item\">\n                            <input type=\"text\" />\n                            <div className=\"checkbox\">\n                                <input type=\"checkbox\" id=\"checkbox_5\" />\n                                <label for=\"checkbox_5\"></label>\n                            </div>\n                        </div>\n                        <div className=\"list-item\">\n                            <input type=\"text\" />\n                            <div className=\"checkbox\">\n                                <input type=\"checkbox\" id=\"checkbox_6\" />\n                                <label for=\"checkbox_6\"></label>\n                            </div>\n                        </div>\n                        <div className=\"list-item\">\n                            <input type=\"text\" />\n                            <div className=\"checkbox\">\n                                <input type=\"checkbox\" id=\"checkbox_7\" />\n                                <label for=\"checkbox_7\"></label>\n                            </div>\n                        </div>\n                        <div className=\"list-item\">\n                            <input type=\"text\" />\n                            <div className=\"checkbox\">\n                                <input type=\"checkbox\" id=\"checkbox_8\" />\n                                <label for=\"checkbox_8\"></label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Priorities\n","import React from 'react';\n\nclass Health extends React.Component {\n    render() {\n        return(\n            <div className=\"health-wrapper\">\n                <div className=\"health-content\">\n                    <div className=\"water-intake\">\n                        <h2>Water Intake</h2>\n                        <div className=\"water-content\">\n                            <div className=\"checkbox\">\n                                <input type=\"checkbox\" id=\"checkbox_9\" />\n                                <label for=\"checkbox_9\">\n                                    <svg width=\"30%\" viewbox=\"0 0 30 42\">\n                                        <path fill=\"transparent\" stroke=\"#000\" stroke-width=\"1.5\"\n                                            d=\"M15 3\n                                            Q16.5 6.8 25 18\n                                            A12.8 12.8 0 1 1 5 18\n                                            Q13.5 6.8 15 3z\" />\n                                    </svg>\n                                </label>\n                            </div>\n                            <div className=\"checkbox\">\n                                <input type=\"checkbox\" id=\"checkbox_10\" />\n                                <label for=\"checkbox_10\">\n                                    <svg width=\"30%\" viewbox=\"0 0 30 42\">\n                                        <path fill=\"transparent\" stroke=\"#000\" stroke-width=\"1.5\"\n                                            d=\"M15 3\n                                            Q16.5 6.8 25 18\n                                            A12.8 12.8 0 1 1 5 18\n                                            Q13.5 6.8 15 3z\" />\n                                    </svg>\n                                </label>\n                            </div>\n                            <div className=\"checkbox\">\n                                <input type=\"checkbox\" id=\"checkbox_11\" />\n                                <label for=\"checkbox_11\">\n                                    <svg width=\"30%\" viewbox=\"0 0 30 42\">\n                                        <path fill=\"transparent\" stroke=\"#000\" stroke-width=\"1.5\"\n                                            d=\"M15 3\n                                            Q16.5 6.8 25 18\n                                            A12.8 12.8 0 1 1 5 18\n                                            Q13.5 6.8 15 3z\" />\n                                    </svg>\n                                </label>\n                            </div>\n                            <div className=\"checkbox\">\n                                <input type=\"checkbox\" id=\"checkbox_12\" />\n                                <label for=\"checkbox_12\">\n                                    <svg width=\"30%\" viewbox=\"0 0 30 42\">\n                                        <path fill=\"transparent\" stroke=\"#000\" stroke-width=\"1.5\"\n                                            d=\"M15 3\n                                            Q16.5 6.8 25 18\n                                            A12.8 12.8 0 1 1 5 18\n                                            Q13.5 6.8 15 3z\" />\n                                    </svg>\n                                </label>\n                            </div>                            \n                        </div>\n                    </div>\n                    <div className=\"health-bottom\">\n                        <div className=\"workout\">\n                            <h3>Today's workout</h3>\n                            <textarea rows=\"4\" cols=\"50\" />                        \n                        </div>\n                        <div className=\"meals-wrapper\">\n                            <h3>Meals</h3>\n                            <div className=\"meals\">\n                                <div className=\"meal\">\n                                    <h4>Breakfast</h4>\n                                    <textarea rows=\"4\" cols=\"50\" />\n                                </div>\n                                <div className=\"meal\">\n                                    <h4>Lunch</h4>\n                                    <textarea rows=\"4\" cols=\"50\" />\n                                </div>\n                                <div className=\"meal\">\n                                    <h4>Dinner</h4>\n                                    <textarea rows=\"4\" cols=\"50\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n\n        )\n    }\n}\n\nexport default Health","import React, { Component } from 'react'\nimport Header from './Components/Header.js';\nimport Grateful from './Components/Grateful.js';\nimport Priorities from './Components/Priorities.js';\nimport Health from './Components/Health.js';\n\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <Header />\n          <Grateful />\n        </header>\n        <section className=\"lists\">\n          <Priorities />\n        </section>\n        <section className=\"health\">\n          <Health />\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App\n\n\n// TO DO\n// Figure out how to have two components repated twice without having the same words -- just want same skeleton without repeating\n// Figure out how to loop over jsx elements rather than repeating - Eg. list items\n// Loop over list items eg. water intake same way as other elements?\n// is it ok to put sections and divs within app.js component?\n// use a quote api to pull in inspirational quotes to put at top of page on load - new one each days\n// how to get just the date? i don't want the extra stuff :)\n// I want the date to show on page load, not on click.\n// SAVE SVG IN OWN FILE AND IMPORT INTO NEEDED FILES\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/flower.5758bb4e.png\";"],"sourceRoot":""}